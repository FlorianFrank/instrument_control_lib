name: mac_os_latest

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "macOS Latest Clang",
            os: macos-latest,
            artifact: "macos_clang.7z",
            build_type: "Release",
            cc: "clang",
            cxx: "clang++",
            archiver: "7za a",
            generators: "Ninja"
          }

    steps:
      - name: Checkout Repository and Submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build
      
      - name: Configure CMake
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.config.build_type}}
      
      - name: Build Project
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config ${{ matrix.config.build_type }} --target all
      
      - name: Execute UnitTests
        working-directory: ${{runner.workspace}}/build
        run: GTEST_OUTPUT=xml:test-results/ GTEST_COLOR=1 ctest -V

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: instrument_control_lib_mac_os_x64
          path: |
            ${{ runner.workspace }}/build/python_interface/py_instrument_control_lib*.so
            ${{ runner.workspace }}/build/*.dylib
            ${{ runner.workspace }}/build/common_tools_lib/*.dylib
            ${{runner.workspace}}/build/common_tools_lib/test-results/**/*.xml

