name: windows_latest

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "Windows Latest MinGW",
            os: windows-latest,
            artifact: "windows_mingw.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Ninja"
          }

    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master

      - name: Checkout Repository and Submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake Windows
        working-directory: ${{runner.workspace}}/build
        shell: pwsh
        run: cmake ../instrument_control_lib -GNinja -DCMAKE_BUILD_TYPE=${{matrix.config.build_type}} -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc

      #- name: Copy Windows DLLs
      #  working-directory: ${{runner.workspace}}/instrument_control_lib/common_tools_lib
      #  run: cp libs/windows/* ${{runner.workspace}}/build/common_tools_lib; cp libs/windows/* ${{runner.workspace}}/build/tests

      #- name: Build project
      #  working-directory: ${{runner.workspace}}/build
      #  shell: pwsh
      #  run: cmake --build . --config ${{ matrix.config.build_type }} --target all

      - name: Pip install
        working-directory: ${{runner.workspace}}
        shell: pwsh
        run: pip install ${{runner.workspace}}/instrument_control_lib

      - name: Pip wheel
        working-directory: ${{runner.workspace}}
        shell: pwsh
        run: pip wheel ${{runner.workspace}}/instrument_control_lib


      - name: Execute UnitTests Common Tools Lib
        working-directory: ${{runner.workspace}}/build
        run: .\common_tools_lib\SocketUnitTest.exe GTEST_OUTPUT=xml:test-results/ GTEST_COLOR=1 ctest -V;
             .\common_tools_lib\ExceptionUnitTest.exe GTEST_OUTPUT=xml:test-results/ GTEST_COLOR=1 ctest -V;
             .\common_tools_lib\FileHandlingUnitTest.exe GTEST_OUTPUT=xml:test-results/ GTEST_COLOR=1 ctest -V
             .\common_tools_lib\ThreadingUnitTest.exe GTEST_OUTPUT=xml:test-results/ GTEST_COLOR=1 ctest -V


      - name: Execute UnitTests Instrument Control Lib
        working-directory: ${{runner.workspace}}/build
        run: .\tests\device_unit_test.exe GTEST_OUTPUT=xml:test-results/ GTEST_COLOR=1 ctest -V;

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: instrument_control_lib_win_x64
          path: |
            ${{ runner.workspace }}/build/python_interface/py_instrument_control_lib*.pyd
            ${{ runner.workspace }}/build/*.dll
            ${{ runner.workspace }}/build/*.a
            ${{ runner.workspace }}/build/*.lib
            ${{ runner.workspace }}/build/*.exe
            ${{ runner.workspace }}/build/common_tools_lib/*.dll
            ${{ runner.workspace }}/build/common_tools_lib/*.a
            ${{ runner.workspace }}/build/common_tools_lib/*.lib
            ${{ runner.workspace }}/build/common_tools_lib/*.exe
            ${{runner.workspace}}/build/common_tools_lib/test-results/**/*.xml
